@using Microsoft.AspNetCore.Identity
@using EntityLayer.Concrete

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@if (SignInManager.IsSignedIn(User))
{
    <div class="user_option">
        <ul class="navbar-nav">
            <li class="nav-item ">
                <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserAsync(User).Result.Name</a>
            </li>
        </ul>

    </div>
    <div class="user_option">
        <ul class="navbar-nav">
            <li class="nav-item ">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
                </form>
            </li>
        </ul>

    </div>

}
else
{
    <div class="user_option">
        <ul class="navbar-nav">
            <li class="nav-item float-sm-right">
                <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
        </ul>
    </div>
    <div class="user_option">
        <ul class="navbar-nav">
            <li class="nav-item float-sm-right">
                <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        </ul>
    </div>
    
}

